{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/ator.service\";\nimport * as i2 from \"@angular/forms\";\nfunction AtorComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AtorComponent_li_9_Template_button_click_2_listener() {\n      const ator_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.edit(ator_r2));\n    });\n    i0.ɵɵtext(3, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AtorComponent_li_9_Template_button_click_4_listener() {\n      const ator_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.delete(ator_r2.idAtor));\n    });\n    i0.ɵɵtext(5, \"Excluir\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ator_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ator_r2.nome, \" \");\n  }\n}\nexport let AtorComponent = /*#__PURE__*/(() => {\n  class AtorComponent {\n    atorService;\n    fb;\n    atores = [];\n    atorForm;\n    editId;\n    constructor(atorService, fb) {\n      this.atorService = atorService;\n      this.fb = fb;\n      this.atorForm = this.fb.group({\n        nome: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.loadAtores();\n    }\n    loadAtores() {\n      this.atorService.getAll().subscribe(data => this.atores = data);\n    }\n    save() {\n      const ator = this.atorForm.value;\n      if (this.editId) {\n        ator.idAtor = this.editId;\n        this.atorService.update(ator).subscribe(() => {\n          this.loadAtores();\n          this.resetForm();\n        });\n      } else {\n        this.atorService.create(ator).subscribe(() => {\n          this.loadAtores();\n          this.resetForm();\n        });\n      }\n    }\n    edit(ator) {\n      this.editId = ator.idAtor;\n      this.atorForm.patchValue({\n        nome: ator.nome\n      });\n    }\n    delete(id) {\n      this.atorService.delete(id).subscribe(() => this.loadAtores());\n    }\n    resetForm() {\n      this.editId = undefined;\n      this.atorForm.reset();\n    }\n    static ɵfac = function AtorComponent_Factory(t) {\n      return new (t || AtorComponent)(i0.ɵɵdirectiveInject(i1.AtorService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AtorComponent,\n      selectors: [[\"app-ator\"]],\n      decls: 10,\n      vars: 3,\n      consts: [[3, \"ngSubmit\", \"formGroup\"], [\"formControlName\", \"nome\", \"placeholder\", \"Nome do Ator\", \"required\", \"\"], [\"type\", \"submit\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n      template: function AtorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Atores\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function AtorComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.save();\n          });\n          i0.ɵɵelement(3, \"input\", 1);\n          i0.ɵɵelementStart(4, \"button\", 2);\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function AtorComponent_Template_button_click_6_listener() {\n            return ctx.resetForm();\n          });\n          i0.ɵɵtext(7, \"Cancelar\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"ul\");\n          i0.ɵɵtemplate(9, AtorComponent_li_9_Template, 6, 1, \"li\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.atorForm);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.editId ? \"Atualizar\" : \"Adicionar\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.atores);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return AtorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}